/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //SPANISH ISO DISTRIBUTION
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y   |  U   |  I  |  O  |  P  |  ´           |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H   |  J   |  K  |  L  |  ñ  |  ;           |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N   |  M   |  ,  |  .  |  -  | BLOCK MAYUS  |
            //                    | ALT | LWR | SPC |   | BKSP | RSE  | ENT |
            //ANSI ENGLISH DISTRIBUTION
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y   |  U   |  I  |  O  |  P  |  {   |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H   |  J   |  K  |  L  | ;   | S(,) |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N   |  M   |  ,  |  .  |  /  |      |
            //                    | ALT | LWR | SPC |   | BKSP | RSE  | ENT |
            bindings = <
                &kp ESC    &kp Q   &kp W     &kp E    &kp R        &kp T    &kp Y    &kp U    &kp I     &kp O   &kp P     &kp LBKT
                &kp LSHFT  &kp A   &kp S     &kp D    &kp F        &kp G    &kp H    &kp J    &kp K     &kp L   &kp SEMI  &kp LS(COMMA)
                &kp LCTRL  &kp Z   &kp X     &kp C    &kp V        &kp B    &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH  &kp CAPS
                                   &kp LALT  &mo 1    &kp SPACE    &kp BSPC &mo 2    &kp RET  
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |   '  |
            // |TAB   |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     | PGUP |
            // |      |     |     |     |     |     |   |     |     |     |     |     | PGDN |
            //                    | GUI |     | SPC |   |BKSP |     | ENT |
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |   -  |
            // |TAB   |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   |BKSP |     | ENT |
            bindings = <
                &trans  &kp N1 &kp N2   &kp N3   &kp N4  &kp N5   &kp N6   &kp N7   &kp N8  &kp N9     &kp N0  &kp MINUS
                &kp TAB &trans &trans   &trans   &trans  &trans   &kp LEFT &kp DOWN &kp UP  &kp RIGHT  &trans  &kp PGUP 
                &trans  &trans &trans   &trans   &trans  &trans   &trans   &trans   &trans  &trans     &trans  &kp PGDN 
                                        &kp LGUI &trans  &trans   &trans   &trans   &trans 
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |   |       |  !  |  "  |  #  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =      |  `  |
            // | C(A(TAB)) |  @  |  <  |  >  |  ¿  |  ?  |   |  +  |  *  |  {  |  }  |  ~      |     |
            // |           |     |     |     |  ¡  |  !  |   |  ^  |  \  |  [  |  ]  |         |     |
            //                    | GUI |     | SPC |   | BKSP |     | ENT |
            // -----------------------------------------------------------------------------------------
            // |          |  !      |  @  |  #    |  $      |  %      |   |  ^        |  &      |  *   |  (   |  )  |  C(A(\)) |
            // |C(A(TAB)) | C(A(Q)) | NUBS|S(NUBS)|  =      |  S(-)   |   |  }        | S(})    |  "   |  \   |     |          |
            // |          |         |     |       | !       |  S(+)   |   | C(A("))   | C(A(-)) | S(") | S(\) |     |          |
            //                        | ALT   |         | SPC     |   | BKSP      |         | ENT  |
            bindings = <
                &kp GRAVE       &kp EXCL        &kp AT   &kp HASH     &kp DLLR      &kp PRCNT             &kp CARET       &kp AMPS          &kp ASTRK   &kp LPAR     &kp RPAR         &kp LC(LA(BSLH))
                &kp LC(LA(TAB)) &kp LC(LA(Q))   &kp NUBS &kp LS(NUBS) &kp EQUAL     &kp LS(MINUS)         &kp RBKT        &kp LS(RBKT)      &kp SQT     &kp BSLH     &kp LC(LA(RBKT)) &trans
                &trans          &trans          &trans   &trans       &kp EXCL      &kp LS(EQUAL)         &kp LC(LA(SQT)) &kp LC(LA(MINUS)) &kp LS(SQT) &kp LS(BSLH) &trans           &trans
                                                   &kp LALT     &trans        &trans                &trans          &trans            &trans
            >;
        };
    };
};
